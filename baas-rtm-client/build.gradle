apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

sourceCompatibility = 1.7
compileJava.dependsOn clean
publish.dependsOn build

[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'


[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
sourceSets {
	main {
		java { srcDirs = ['src/main/java']}
		 resources {
			   srcDirs = ['src/main/resources']
		 }
	}

}
ext{
	moduleName="batch-rtm-client-1.0-SNAPSHOT";
	version '1.0-SNAPSHOT'
	publishUserName = "resdev"
	publishUserPassword = "resdev"
	publishURL="http://10.1.228.199:18081/nexus/content/repositories/snapshots/"
	builtBy="gradle 2.2"
	
	runnerBaseVersion="1.0-SNAPSHOT"

}

repositories {
	maven { url "http://10.1.228.199:18081/nexus/content/groups/public/" }
}

dependencies{
	compile 'org.mybatis:mybatis:3.3.0'
	compile 'org.mybatis:mybatis-spring:1.2.3'
	compile 'mysql:mysql-connector-java:5.1.36'
//    compile 'org.springframework:spring-tx:4.1.7.RELEASE'
	compile 'org.springframework:spring-jdbc:4.1.7.RELEASE'
//    compile 'log4j:log4j:1.2.11'
	compile 'org.json:json:20150729'
	
	compile ('org.apache.hbase:hbase-client:1.0.1.1'){
		 exclude group: 'com.sun.jersey', module: 'jersey-core'
		exclude group: 'com.sun.jersey', module: 'jersey-json'
		exclude group: 'com.sun.jersey', module: 'jersey-server'
	 }
	compile 'com.ai.baas:baas-dshm-sdk:2.0-SNAPSHOT'
	compile 'com.ai.baas.dshm:dshmprocess:2.0-SNAPSHOT'
	testCompile(
		"org.springframework:spring-test:3.2.13.RELEASE",
//        "junit:junit:4.11"
	)
	
	compile 'com.ai.opt.sdk:opt-sdk:2.1-SNAPSHOT'
//	compile 'com.ai.baas.bmc:pricemaking:1.0-SNAPSHOT'
//	compile 'com.ai.baas.bmc:orderinfo:2.0-SNAPSHOT'
//	 compile 'com.ai.baas.bmc:citic:1.0-SNAPSHOT'
//	compile 'com.ai.baas.bmc:baseInfo:1.0.1-SNAPSHOT'
//	 compile 'com.ai.opt.sys:citicrestcommon:2.0-SNAPSHOT'
	 //compile 'com.ai.baas.amc:adapter:1.0-SNAPSHOT'
}

jar {
	baseName moduleName
	version version
	include "com/ai/baas/collect/*/**"
	manifest {
		attributes 'packageName': baseName, 'Built-By': builtBy,'create-date': new Date().format('yyyy-MM-dd HH:mm:ss'), 'Manifest-Version': runnerBaseVersion
	}
	destinationDir file("$buildDir/libs/core-libs")
}
task copyChildConfig(type: Copy) {
		from fileTree(dir: 'src/main/resources')
		destinationDir file("$buildDir/config")
}

task copy3rdJars(type: Copy) {
		from configurations.runtime
		destinationDir file("$buildDir/libs/3rd-libs")
}

task copyScript(type: Copy) {
	from fileTree(dir: 'script')
		destinationDir file("$buildDir/script")
}

task zipLibs(type: Zip) {
	baseName "libs1"
	from "$buildDir/libs"
}

task zipConfig(type: Zip) {
	baseName "config1"
	from "$buildDir/config"
}

//copyScript
build.dependsOn copy3rdJars, copyChildConfig, zipLibs, zipConfig
publishing {
	publications {
		publishing.publications.create("${moduleName}", MavenPublication) {
			groupId group
			artifactId moduleName
			version version
			artifact jar
		}
	}
	repositories {

	}
}
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
