<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.baas.ccp.dao.mapper.interfaces.NoticeSubscribeRecordMapper" >
  <resultMap id="BaseResultMap" type="com.ai.baas.ccp.dao.mapper.bo.NoticeSubscribeRecord" >
    <id column="SEQ_ID" property="seqId" jdbcType="VARCHAR" />
    <result column="TENANT_ID" property="tenantId" jdbcType="VARCHAR" />
    <result column="SUBSCRIBE_ID" property="subscribeId" jdbcType="VARCHAR" />
    <result column="RECORD_ID" property="recordId" jdbcType="VARCHAR" />
    <result column="REQ_TIME" property="reqTime" jdbcType="TIMESTAMP" />
    <result column="REQ_ACK_TIME" property="reqAckTime" jdbcType="TIMESTAMP" />
    <result column="REQ_ACK_BODY" property="reqAckBody" jdbcType="VARCHAR" />
    <result column="REQ_ACK_STATUS" property="reqAckStatus" jdbcType="VARCHAR" />
    <result column="REQ_ACK_MESSAGE" property="reqAckMessage" jdbcType="VARCHAR" />
    <result column="STATE" property="state" jdbcType="VARCHAR" />
    <result column="STATE_DESC" property="stateDesc" jdbcType="VARCHAR" />
    <result column="STATE_CHG_TIME" property="stateChgTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="REMARK" property="remark" jdbcType="VARCHAR" />
    <result column="SEND_TIMES" property="sendTimes" jdbcType="INTEGER" />
    <result column="RELA_SEQ" property="relaSeq" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    SEQ_ID, TENANT_ID, SUBSCRIBE_ID, RECORD_ID, REQ_TIME, REQ_ACK_TIME, REQ_ACK_BODY, 
    REQ_ACK_STATUS, REQ_ACK_MESSAGE, STATE, STATE_DESC, STATE_CHG_TIME, CREATE_TIME, 
    REMARK, SEND_TIMES, RELA_SEQ
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.baas.ccp.dao.mapper.bo.NoticeSubscribeRecordCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from notice_subscribe_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from notice_subscribe_record
    where SEQ_ID = #{seqId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from notice_subscribe_record
    where SEQ_ID = #{seqId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.baas.ccp.dao.mapper.bo.NoticeSubscribeRecordCriteria" >
    delete from notice_subscribe_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.baas.ccp.dao.mapper.bo.NoticeSubscribeRecord" >
    insert into notice_subscribe_record (SEQ_ID, TENANT_ID, SUBSCRIBE_ID, 
      RECORD_ID, REQ_TIME, REQ_ACK_TIME, 
      REQ_ACK_BODY, REQ_ACK_STATUS, REQ_ACK_MESSAGE, 
      STATE, STATE_DESC, STATE_CHG_TIME, 
      CREATE_TIME, REMARK, SEND_TIMES, 
      RELA_SEQ)
    values (#{seqId,jdbcType=VARCHAR}, #{tenantId,jdbcType=VARCHAR}, #{subscribeId,jdbcType=VARCHAR}, 
      #{recordId,jdbcType=VARCHAR}, #{reqTime,jdbcType=TIMESTAMP}, #{reqAckTime,jdbcType=TIMESTAMP}, 
      #{reqAckBody,jdbcType=VARCHAR}, #{reqAckStatus,jdbcType=VARCHAR}, #{reqAckMessage,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{stateDesc,jdbcType=VARCHAR}, #{stateChgTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{sendTimes,jdbcType=INTEGER}, 
      #{relaSeq,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.baas.ccp.dao.mapper.bo.NoticeSubscribeRecord" >
    insert into notice_subscribe_record
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="seqId != null" >
        SEQ_ID,
      </if>
      <if test="tenantId != null" >
        TENANT_ID,
      </if>
      <if test="subscribeId != null" >
        SUBSCRIBE_ID,
      </if>
      <if test="recordId != null" >
        RECORD_ID,
      </if>
      <if test="reqTime != null" >
        REQ_TIME,
      </if>
      <if test="reqAckTime != null" >
        REQ_ACK_TIME,
      </if>
      <if test="reqAckBody != null" >
        REQ_ACK_BODY,
      </if>
      <if test="reqAckStatus != null" >
        REQ_ACK_STATUS,
      </if>
      <if test="reqAckMessage != null" >
        REQ_ACK_MESSAGE,
      </if>
      <if test="state != null" >
        STATE,
      </if>
      <if test="stateDesc != null" >
        STATE_DESC,
      </if>
      <if test="stateChgTime != null" >
        STATE_CHG_TIME,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="remark != null" >
        REMARK,
      </if>
      <if test="sendTimes != null" >
        SEND_TIMES,
      </if>
      <if test="relaSeq != null" >
        RELA_SEQ,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="seqId != null" >
        #{seqId,jdbcType=VARCHAR},
      </if>
      <if test="tenantId != null" >
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="subscribeId != null" >
        #{subscribeId,jdbcType=VARCHAR},
      </if>
      <if test="recordId != null" >
        #{recordId,jdbcType=VARCHAR},
      </if>
      <if test="reqTime != null" >
        #{reqTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reqAckTime != null" >
        #{reqAckTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reqAckBody != null" >
        #{reqAckBody,jdbcType=VARCHAR},
      </if>
      <if test="reqAckStatus != null" >
        #{reqAckStatus,jdbcType=VARCHAR},
      </if>
      <if test="reqAckMessage != null" >
        #{reqAckMessage,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="stateDesc != null" >
        #{stateDesc,jdbcType=VARCHAR},
      </if>
      <if test="stateChgTime != null" >
        #{stateChgTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sendTimes != null" >
        #{sendTimes,jdbcType=INTEGER},
      </if>
      <if test="relaSeq != null" >
        #{relaSeq,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.baas.ccp.dao.mapper.bo.NoticeSubscribeRecordCriteria" resultType="java.lang.Integer" >
    select count(*) from notice_subscribe_record
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update notice_subscribe_record
    <set >
      <if test="record.seqId != null" >
        SEQ_ID = #{record.seqId,jdbcType=VARCHAR},
      </if>
      <if test="record.tenantId != null" >
        TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.subscribeId != null" >
        SUBSCRIBE_ID = #{record.subscribeId,jdbcType=VARCHAR},
      </if>
      <if test="record.recordId != null" >
        RECORD_ID = #{record.recordId,jdbcType=VARCHAR},
      </if>
      <if test="record.reqTime != null" >
        REQ_TIME = #{record.reqTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reqAckTime != null" >
        REQ_ACK_TIME = #{record.reqAckTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.reqAckBody != null" >
        REQ_ACK_BODY = #{record.reqAckBody,jdbcType=VARCHAR},
      </if>
      <if test="record.reqAckStatus != null" >
        REQ_ACK_STATUS = #{record.reqAckStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.reqAckMessage != null" >
        REQ_ACK_MESSAGE = #{record.reqAckMessage,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        STATE = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.stateDesc != null" >
        STATE_DESC = #{record.stateDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.stateChgTime != null" >
        STATE_CHG_TIME = #{record.stateChgTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.remark != null" >
        REMARK = #{record.remark,jdbcType=VARCHAR},
      </if>
      <if test="record.sendTimes != null" >
        SEND_TIMES = #{record.sendTimes,jdbcType=INTEGER},
      </if>
      <if test="record.relaSeq != null" >
        RELA_SEQ = #{record.relaSeq,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update notice_subscribe_record
    set SEQ_ID = #{record.seqId,jdbcType=VARCHAR},
      TENANT_ID = #{record.tenantId,jdbcType=VARCHAR},
      SUBSCRIBE_ID = #{record.subscribeId,jdbcType=VARCHAR},
      RECORD_ID = #{record.recordId,jdbcType=VARCHAR},
      REQ_TIME = #{record.reqTime,jdbcType=TIMESTAMP},
      REQ_ACK_TIME = #{record.reqAckTime,jdbcType=TIMESTAMP},
      REQ_ACK_BODY = #{record.reqAckBody,jdbcType=VARCHAR},
      REQ_ACK_STATUS = #{record.reqAckStatus,jdbcType=VARCHAR},
      REQ_ACK_MESSAGE = #{record.reqAckMessage,jdbcType=VARCHAR},
      STATE = #{record.state,jdbcType=VARCHAR},
      STATE_DESC = #{record.stateDesc,jdbcType=VARCHAR},
      STATE_CHG_TIME = #{record.stateChgTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{record.createTime,jdbcType=TIMESTAMP},
      REMARK = #{record.remark,jdbcType=VARCHAR},
      SEND_TIMES = #{record.sendTimes,jdbcType=INTEGER},
      RELA_SEQ = #{record.relaSeq,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.baas.ccp.dao.mapper.bo.NoticeSubscribeRecord" >
    update notice_subscribe_record
    <set >
      <if test="tenantId != null" >
        TENANT_ID = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="subscribeId != null" >
        SUBSCRIBE_ID = #{subscribeId,jdbcType=VARCHAR},
      </if>
      <if test="recordId != null" >
        RECORD_ID = #{recordId,jdbcType=VARCHAR},
      </if>
      <if test="reqTime != null" >
        REQ_TIME = #{reqTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reqAckTime != null" >
        REQ_ACK_TIME = #{reqAckTime,jdbcType=TIMESTAMP},
      </if>
      <if test="reqAckBody != null" >
        REQ_ACK_BODY = #{reqAckBody,jdbcType=VARCHAR},
      </if>
      <if test="reqAckStatus != null" >
        REQ_ACK_STATUS = #{reqAckStatus,jdbcType=VARCHAR},
      </if>
      <if test="reqAckMessage != null" >
        REQ_ACK_MESSAGE = #{reqAckMessage,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        STATE = #{state,jdbcType=VARCHAR},
      </if>
      <if test="stateDesc != null" >
        STATE_DESC = #{stateDesc,jdbcType=VARCHAR},
      </if>
      <if test="stateChgTime != null" >
        STATE_CHG_TIME = #{stateChgTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="remark != null" >
        REMARK = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="sendTimes != null" >
        SEND_TIMES = #{sendTimes,jdbcType=INTEGER},
      </if>
      <if test="relaSeq != null" >
        RELA_SEQ = #{relaSeq,jdbcType=VARCHAR},
      </if>
    </set>
    where SEQ_ID = #{seqId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.baas.ccp.dao.mapper.bo.NoticeSubscribeRecord" >
    update notice_subscribe_record
    set TENANT_ID = #{tenantId,jdbcType=VARCHAR},
      SUBSCRIBE_ID = #{subscribeId,jdbcType=VARCHAR},
      RECORD_ID = #{recordId,jdbcType=VARCHAR},
      REQ_TIME = #{reqTime,jdbcType=TIMESTAMP},
      REQ_ACK_TIME = #{reqAckTime,jdbcType=TIMESTAMP},
      REQ_ACK_BODY = #{reqAckBody,jdbcType=VARCHAR},
      REQ_ACK_STATUS = #{reqAckStatus,jdbcType=VARCHAR},
      REQ_ACK_MESSAGE = #{reqAckMessage,jdbcType=VARCHAR},
      STATE = #{state,jdbcType=VARCHAR},
      STATE_DESC = #{stateDesc,jdbcType=VARCHAR},
      STATE_CHG_TIME = #{stateChgTime,jdbcType=TIMESTAMP},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      REMARK = #{remark,jdbcType=VARCHAR},
      SEND_TIMES = #{sendTimes,jdbcType=INTEGER},
      RELA_SEQ = #{relaSeq,jdbcType=VARCHAR}
    where SEQ_ID = #{seqId,jdbcType=VARCHAR}
  </update>
</mapper>