<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.runner.center.bmc.resdeposit.dao.interfaces.ResDupLogMapper" >
  <resultMap id="BaseResultMap" type="com.ai.runner.center.bmc.resdeposit.dao.mapper.bo.ResDupLog" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="subs_id" property="subsId" jdbcType="VARCHAR" />
    <result column="product_id" property="productId" jdbcType="VARCHAR" />
    <result column="subs_product_id" property="subsProductId" jdbcType="VARCHAR" />
    <result column="systemtime" property="systemtime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ID, subs_id, product_id, subs_product_id, systemtime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.runner.center.bmc.resdeposit.dao.mapper.bo.ResDupLogCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from res_dup_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="Integer" >
    select 
    <include refid="Base_Column_List" />
    from res_dup_log
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Integer" >
    delete from res_dup_log
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.runner.center.bmc.resdeposit.dao.mapper.bo.ResDupLogCriteria" >
    delete from res_dup_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.runner.center.bmc.resdeposit.dao.mapper.bo.ResDupLog" >
    insert into res_dup_log (ID, subs_id, product_id, 
      subs_product_id, systemtime)
    values (#{id,jdbcType=INTEGER}, #{subsId,jdbcType=VARCHAR}, #{productId,jdbcType=VARCHAR}, 
      #{subsProductId,jdbcType=VARCHAR}, #{systemtime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.runner.center.bmc.resdeposit.dao.mapper.bo.ResDupLog" >
    insert into res_dup_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="subsId != null" >
        subs_id,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="subsProductId != null" >
        subs_product_id,
      </if>
      <if test="systemtime != null" >
        systemtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="subsId != null" >
        #{subsId,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        #{productId,jdbcType=VARCHAR},
      </if>
      <if test="subsProductId != null" >
        #{subsProductId,jdbcType=VARCHAR},
      </if>
      <if test="systemtime != null" >
        #{systemtime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.runner.center.bmc.resdeposit.dao.mapper.bo.ResDupLogCriteria" resultType="java.lang.Integer" >
    select count(*) from res_dup_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update res_dup_log
    <set >
      <if test="record.id != null" >
        ID = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.subsId != null" >
        subs_id = #{record.subsId,jdbcType=VARCHAR},
      </if>
      <if test="record.productId != null" >
        product_id = #{record.productId,jdbcType=VARCHAR},
      </if>
      <if test="record.subsProductId != null" >
        subs_product_id = #{record.subsProductId,jdbcType=VARCHAR},
      </if>
      <if test="record.systemtime != null" >
        systemtime = #{record.systemtime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update res_dup_log
    set ID = #{record.id,jdbcType=INTEGER},
      subs_id = #{record.subsId,jdbcType=VARCHAR},
      product_id = #{record.productId,jdbcType=VARCHAR},
      subs_product_id = #{record.subsProductId,jdbcType=VARCHAR},
      systemtime = #{record.systemtime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.runner.center.bmc.resdeposit.dao.mapper.bo.ResDupLog" >
    update res_dup_log
    <set >
      <if test="subsId != null" >
        subs_id = #{subsId,jdbcType=VARCHAR},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=VARCHAR},
      </if>
      <if test="subsProductId != null" >
        subs_product_id = #{subsProductId,jdbcType=VARCHAR},
      </if>
      <if test="systemtime != null" >
        systemtime = #{systemtime,jdbcType=VARCHAR},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.runner.center.bmc.resdeposit.dao.mapper.bo.ResDupLog" >
    update res_dup_log
    set subs_id = #{subsId,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=VARCHAR},
      subs_product_id = #{subsProductId,jdbcType=VARCHAR},
      systemtime = #{systemtime,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="getTableNum" resultType="java.lang.Integer" parameterType="String" >
    select count(1) from (
	select TABLE_NAME from INFORMATION_SCHEMA.TABLES where 
	TABLE_NAME = #{tableName,jdbcType=VARCHAR}
	) a
  </select>
  
  <update id="createResDupLogTable" parameterType="String">  
  	CREATE TABLE ${tableName} (
	  `ID` int(11) NOT NULL,
	  `subs_id` varchar(32) COLLATE utf8_bin NOT NULL,
	  `product_id` varchar(32) COLLATE utf8_bin NOT NULL,
	  `subs_product_id` varchar(32) COLLATE utf8_bin NOT NULL,
	  `systemtime` varchar(32) COLLATE utf8_bin DEFAULT NULL,
	  PRIMARY KEY (`ID`)
	) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;
  </update>  
  
  <insert id="insertResDupLog" parameterType="map" >
    insert into ${tableName} (ID, subs_id, product_id, 
      subs_product_id, systemtime)
    values (#{record.id,jdbcType=INTEGER}, #{record.subsId,jdbcType=VARCHAR}, #{record.productId,jdbcType=VARCHAR}, 
      #{record.subsProductId,jdbcType=VARCHAR}, #{record.systemtime,jdbcType=VARCHAR})
  </insert>
  
  <select id="selectResDupLogByExample" resultMap="BaseResultMap" parameterType="com.ai.runner.center.bmc.resdeposit.dao.mapper.bo.ResDupLogCriteria" >
    select
    <if test="record.distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from ${tableName}
    <if test="_parameter != null" >
      <include refid="Example_Res_Where_Clause" />
    </if>
    <if test="record.orderByClause != null" >
      order by ${record.orderByClause}
    </if>
    <if test="record.limitStart != null and record.limitStart>=0" >
      limit #{record.limitStart} , #{record.limitEnd}
    </if>
  </select>
  
  <sql id="Example_Res_Where_Clause" >
    <where >
      <foreach collection="record.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
</mapper>