<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.opt.sys.dao.mapper.interfaces.GnRoleMapper" >
  <resultMap id="BaseResultMap" type="com.ai.opt.sys.dao.mapper.bo.GnRole" >
    <id column="role_id" property="roleId" jdbcType="BIGINT" />
    <result column="tenant_id" property="tenantId" jdbcType="VARCHAR" />
    <result column="role_name" property="roleName" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="role_desc" property="roleDesc" jdbcType="VARCHAR" />
    <result column="active_time" property="activeTime" jdbcType="TIMESTAMP" />
    <result column="inactive_time" property="inactiveTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_account_id" property="createAccountId" jdbcType="BIGINT" />
    <result column="update_account_id" property="updateAccountId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    role_id, tenant_id, role_name, state, role_desc, active_time, inactive_time, create_time, 
    update_time, create_account_id, update_account_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.opt.sys.dao.mapper.bo.GnRoleCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from gn_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="long" >
    select 
    <include refid="Base_Column_List" />
    from gn_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="long" >
    delete from gn_role
    where role_id = #{roleId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.opt.sys.dao.mapper.bo.GnRoleCriteria" >
    delete from gn_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.opt.sys.dao.mapper.bo.GnRole" >
    insert into gn_role (role_id, tenant_id, role_name, 
      state, role_desc, active_time, 
      inactive_time, create_time, update_time, 
      create_account_id, update_account_id)
    values (#{roleId,jdbcType=BIGINT}, #{tenantId,jdbcType=VARCHAR}, #{roleName,jdbcType=VARCHAR}, 
      #{state,jdbcType=VARCHAR}, #{roleDesc,jdbcType=VARCHAR}, #{activeTime,jdbcType=TIMESTAMP}, 
      #{inactiveTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createAccountId,jdbcType=BIGINT}, #{updateAccountId,jdbcType=BIGINT})
  </insert>
  <insert id="insertSelective" parameterType="com.ai.opt.sys.dao.mapper.bo.GnRole" >
    insert into gn_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      role_id,
      <if test="tenantId != null" >
        tenant_id,
      </if>
      <if test="roleName != null" >
        role_name,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="roleDesc != null" >
        role_desc,
      </if>
      <if test="activeTime != null" >
        active_time,
      </if>
      <if test="inactiveTime != null" >
        inactive_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      create_account_id,
      update_account_id,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{roleId,jdbcType=BIGINT},
      <if test="tenantId != null" >
        #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="activeTime != null" >
        #{activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inactiveTime != null" >
        #{inactiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      #{createAccountId,jdbcType=BIGINT},
      #{updateAccountId,jdbcType=BIGINT},
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.opt.sys.dao.mapper.bo.GnRoleCriteria" resultType="java.lang.Integer" >
    select count(*) from gn_role
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update gn_role
    <set >
      <if test="record.roleId != null" >
        role_id = #{record.roleId,jdbcType=BIGINT},
      </if>
      <if test="record.tenantId != null" >
        tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      </if>
      <if test="record.roleName != null" >
        role_name = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.roleDesc != null" >
        role_desc = #{record.roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.activeTime != null" >
        active_time = #{record.activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.inactiveTime != null" >
        inactive_time = #{record.inactiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createAccountId != null" >
        create_account_id = #{record.createAccountId,jdbcType=BIGINT},
      </if>
      <if test="record.updateAccountId != null" >
        update_account_id = #{record.updateAccountId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update gn_role
    set role_id = #{record.roleId,jdbcType=BIGINT},
      tenant_id = #{record.tenantId,jdbcType=VARCHAR},
      role_name = #{record.roleName,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      role_desc = #{record.roleDesc,jdbcType=VARCHAR},
      active_time = #{record.activeTime,jdbcType=TIMESTAMP},
      inactive_time = #{record.inactiveTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_account_id = #{record.createAccountId,jdbcType=BIGINT},
      update_account_id = #{record.updateAccountId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.opt.sys.dao.mapper.bo.GnRole" >
    update gn_role
    <set >
      <if test="tenantId != null" >
        tenant_id = #{tenantId,jdbcType=VARCHAR},
      </if>
      <if test="roleName != null" >
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="roleDesc != null" >
        role_desc = #{roleDesc,jdbcType=VARCHAR},
      </if>
      <if test="activeTime != null" >
        active_time = #{activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inactiveTime != null" >
        inactive_time = #{inactiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createAccountId != null" >
        create_account_id = #{createAccountId,jdbcType=BIGINT},
      </if>
      <if test="updateAccountId != null" >
        update_account_id = #{updateAccountId,jdbcType=BIGINT},
      </if>
    </set>
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.opt.sys.dao.mapper.bo.GnRole" >
    update gn_role
    set tenant_id = #{tenantId,jdbcType=VARCHAR},
      role_name = #{roleName,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      role_desc = #{roleDesc,jdbcType=VARCHAR},
      active_time = #{activeTime,jdbcType=TIMESTAMP},
      inactive_time = #{inactiveTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_account_id = #{createAccountId,jdbcType=BIGINT},
      update_account_id = #{updateAccountId,jdbcType=BIGINT}
    where role_id = #{roleId,jdbcType=BIGINT}
  </update>
</mapper>