<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.opt.sys.dao.mapper.interfaces.StationMailMapper" >
  <resultMap id="BaseResultMap" type="com.ai.opt.sys.dao.mapper.bo.StationMail" >
    <id column="mail_id" property="mailId" jdbcType="BIGINT" />
    <result column="recipient" property="recipient" jdbcType="VARCHAR" />
    <result column="recipient_name" property="recipientName" jdbcType="VARCHAR" />
    <result column="sender" property="sender" jdbcType="VARCHAR" />
    <result column="sender_name" property="senderName" jdbcType="VARCHAR" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="level" property="level" jdbcType="VARCHAR" />
    <result column="is_read" property="isRead" jdbcType="VARCHAR" />
    <result column="is_del" property="isDel" jdbcType="VARCHAR" />
    <result column="sendtime" property="sendtime" jdbcType="TIMESTAMP" />
    <result column="readtime" property="readtime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.ai.opt.sys.dao.mapper.bo.StationMail" extends="BaseResultMap" >
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    mail_id, recipient, recipient_name, sender, sender_name, title, level, is_read, is_del, 
    sendtime, readtime
  </sql>
  <sql id="Blob_Column_List" >
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="com.ai.opt.sys.dao.mapper.bo.StationMailCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from gn_station_mails
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.opt.sys.dao.mapper.bo.StationMailCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from gn_station_mails
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from gn_station_mails
    where mail_id = #{mailId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Long" >
    delete from gn_station_mails
    where mail_id = #{mailId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.opt.sys.dao.mapper.bo.StationMailCriteria" >
    delete from gn_station_mails
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.opt.sys.dao.mapper.bo.StationMail" >
    insert into gn_station_mails (mail_id, recipient, recipient_name, 
      sender, sender_name, title, 
      level, is_read, is_del, 
      sendtime, readtime, content
      )
    values (#{mailId,jdbcType=BIGINT}, #{recipient,jdbcType=VARCHAR}, #{recipientName,jdbcType=VARCHAR}, 
      #{sender,jdbcType=VARCHAR}, #{senderName,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR}, 
      #{level,jdbcType=VARCHAR}, #{isRead,jdbcType=VARCHAR}, #{isDel,jdbcType=VARCHAR}, 
      #{sendtime,jdbcType=TIMESTAMP}, #{readtime,jdbcType=TIMESTAMP}, #{content,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ai.opt.sys.dao.mapper.bo.StationMail" >
    insert into gn_station_mails
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="mailId != null" >
        mail_id,
      </if>
      <if test="recipient != null" >
        recipient,
      </if>
      <if test="recipientName != null" >
        recipient_name,
      </if>
      <if test="sender != null" >
        sender,
      </if>
      <if test="senderName != null" >
        sender_name,
      </if>
      <if test="title != null" >
        title,
      </if>
      <if test="level != null" >
        level,
      </if>
      <if test="isRead != null" >
        is_read,
      </if>
      <if test="isDel != null" >
        is_del,
      </if>
      <if test="sendtime != null" >
        sendtime,
      </if>
      <if test="readtime != null" >
        readtime,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="mailId != null" >
        #{mailId,jdbcType=BIGINT},
      </if>
      <if test="recipient != null" >
        #{recipient,jdbcType=VARCHAR},
      </if>
      <if test="recipientName != null" >
        #{recipientName,jdbcType=VARCHAR},
      </if>
      <if test="sender != null" >
        #{sender,jdbcType=VARCHAR},
      </if>
      <if test="senderName != null" >
        #{senderName,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        #{level,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null" >
        #{isRead,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        #{isDel,jdbcType=VARCHAR},
      </if>
      <if test="sendtime != null" >
        #{sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="readtime != null" >
        #{readtime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.opt.sys.dao.mapper.bo.StationMailCriteria" resultType="java.lang.Integer" >
    select count(*) from gn_station_mails
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update gn_station_mails
    <set >
      <if test="record.mailId != null" >
        mail_id = #{record.mailId,jdbcType=BIGINT},
      </if>
      <if test="record.recipient != null" >
        recipient = #{record.recipient,jdbcType=VARCHAR},
      </if>
      <if test="record.recipientName != null" >
        recipient_name = #{record.recipientName,jdbcType=VARCHAR},
      </if>
      <if test="record.sender != null" >
        sender = #{record.sender,jdbcType=VARCHAR},
      </if>
      <if test="record.senderName != null" >
        sender_name = #{record.senderName,jdbcType=VARCHAR},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.level != null" >
        level = #{record.level,jdbcType=VARCHAR},
      </if>
      <if test="record.isRead != null" >
        is_read = #{record.isRead,jdbcType=VARCHAR},
      </if>
      <if test="record.isDel != null" >
        is_del = #{record.isDel,jdbcType=VARCHAR},
      </if>
      <if test="record.sendtime != null" >
        sendtime = #{record.sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.readtime != null" >
        readtime = #{record.readtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update gn_station_mails
    set mail_id = #{record.mailId,jdbcType=BIGINT},
      recipient = #{record.recipient,jdbcType=VARCHAR},
      recipient_name = #{record.recipientName,jdbcType=VARCHAR},
      sender = #{record.sender,jdbcType=VARCHAR},
      sender_name = #{record.senderName,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=VARCHAR},
      is_read = #{record.isRead,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=VARCHAR},
      sendtime = #{record.sendtime,jdbcType=TIMESTAMP},
      readtime = #{record.readtime,jdbcType=TIMESTAMP},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update gn_station_mails
    set mail_id = #{record.mailId,jdbcType=BIGINT},
      recipient = #{record.recipient,jdbcType=VARCHAR},
      recipient_name = #{record.recipientName,jdbcType=VARCHAR},
      sender = #{record.sender,jdbcType=VARCHAR},
      sender_name = #{record.senderName,jdbcType=VARCHAR},
      title = #{record.title,jdbcType=VARCHAR},
      level = #{record.level,jdbcType=VARCHAR},
      is_read = #{record.isRead,jdbcType=VARCHAR},
      is_del = #{record.isDel,jdbcType=VARCHAR},
      sendtime = #{record.sendtime,jdbcType=TIMESTAMP},
      readtime = #{record.readtime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.opt.sys.dao.mapper.bo.StationMail" >
    update gn_station_mails
    <set >
      <if test="recipient != null" >
        recipient = #{recipient,jdbcType=VARCHAR},
      </if>
      <if test="recipientName != null" >
        recipient_name = #{recipientName,jdbcType=VARCHAR},
      </if>
      <if test="sender != null" >
        sender = #{sender,jdbcType=VARCHAR},
      </if>
      <if test="senderName != null" >
        sender_name = #{senderName,jdbcType=VARCHAR},
      </if>
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="level != null" >
        level = #{level,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null" >
        is_read = #{isRead,jdbcType=VARCHAR},
      </if>
      <if test="isDel != null" >
        is_del = #{isDel,jdbcType=VARCHAR},
      </if>
      <if test="sendtime != null" >
        sendtime = #{sendtime,jdbcType=TIMESTAMP},
      </if>
      <if test="readtime != null" >
        readtime = #{readtime,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where mail_id = #{mailId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ai.opt.sys.dao.mapper.bo.StationMail" >
    update gn_station_mails
    set recipient = #{recipient,jdbcType=VARCHAR},
      recipient_name = #{recipientName,jdbcType=VARCHAR},
      sender = #{sender,jdbcType=VARCHAR},
      sender_name = #{senderName,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      is_read = #{isRead,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=VARCHAR},
      sendtime = #{sendtime,jdbcType=TIMESTAMP},
      readtime = #{readtime,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=LONGVARCHAR}
    where mail_id = #{mailId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.opt.sys.dao.mapper.bo.StationMail" >
    update gn_station_mails
    set recipient = #{recipient,jdbcType=VARCHAR},
      recipient_name = #{recipientName,jdbcType=VARCHAR},
      sender = #{sender,jdbcType=VARCHAR},
      sender_name = #{senderName,jdbcType=VARCHAR},
      title = #{title,jdbcType=VARCHAR},
      level = #{level,jdbcType=VARCHAR},
      is_read = #{isRead,jdbcType=VARCHAR},
      is_del = #{isDel,jdbcType=VARCHAR},
      sendtime = #{sendtime,jdbcType=TIMESTAMP},
      readtime = #{readtime,jdbcType=TIMESTAMP}
    where mail_id = #{mailId,jdbcType=BIGINT}
  </update>
</mapper>