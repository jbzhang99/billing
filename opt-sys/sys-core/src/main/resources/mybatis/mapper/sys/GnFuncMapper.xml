<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ai.opt.sys.dao.mapper.interfaces.GnFuncMapper" >
  <resultMap id="BaseResultMap" type="com.ai.opt.sys.dao.mapper.bo.GnFunc" >
    <id column="func_id" property="funcId" jdbcType="BIGINT" />
    <result column="func_name" property="funcName" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="func_url" property="funcUrl" jdbcType="VARCHAR" />
    <result column="func_type" property="funcType" jdbcType="VARCHAR" />
    <result column="func_sort" property="funcSort" jdbcType="BIGINT" />
    <result column="parent_func_id" property="parentFuncId" jdbcType="BIGINT" />
    <result column="func_css_class" property="funcCssClass" jdbcType="VARCHAR" />
    <result column="func_pic" property="funcPic" jdbcType="VARCHAR" />
    <result column="active_time" property="activeTime" jdbcType="TIMESTAMP" />
    <result column="inactive_time" property="inactiveTime" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_account_id" property="createAccountId" jdbcType="BIGINT" />
    <result column="update_account_id" property="updateAccountId" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    func_id, func_name, state, func_url, func_type, func_sort, parent_func_id, func_css_class, 
    func_pic, active_time, inactive_time, create_time, update_time, create_account_id, 
    update_account_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ai.opt.sys.dao.mapper.bo.GnFuncCriteria" >
    select
    <if test="distinct" >
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from gn_func
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <if test="limitStart != null and limitStart>=0" >
      limit #{limitStart} , #{limitEnd}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="long" >
    select 
    <include refid="Base_Column_List" />
    from gn_func
    where func_id = #{funcId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="long" >
    delete from gn_func
    where func_id = #{funcId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ai.opt.sys.dao.mapper.bo.GnFuncCriteria" >
    delete from gn_func
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ai.opt.sys.dao.mapper.bo.GnFunc" >
    insert into gn_func (func_id, func_name, state, 
      func_url, func_type, func_sort, 
      parent_func_id, func_css_class, func_pic, 
      active_time, inactive_time, create_time, 
      update_time, create_account_id, update_account_id
      )
    values (#{funcId,jdbcType=BIGINT}, #{funcName,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{funcUrl,jdbcType=VARCHAR}, #{funcType,jdbcType=VARCHAR}, #{funcSort,jdbcType=BIGINT}, 
      #{parentFuncId,jdbcType=BIGINT}, #{funcCssClass,jdbcType=VARCHAR}, #{funcPic,jdbcType=VARCHAR}, 
      #{activeTime,jdbcType=TIMESTAMP}, #{inactiveTime,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createAccountId,jdbcType=BIGINT}, #{updateAccountId,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ai.opt.sys.dao.mapper.bo.GnFunc" >
    insert into gn_func
    <trim prefix="(" suffix=")" suffixOverrides="," >
      func_id,
      <if test="funcName != null" >
        func_name,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="funcUrl != null" >
        func_url,
      </if>
      <if test="funcType != null" >
        func_type,
      </if>
      func_sort,
      parent_func_id,
      <if test="funcCssClass != null" >
        func_css_class,
      </if>
      <if test="funcPic != null" >
        func_pic,
      </if>
      <if test="activeTime != null" >
        active_time,
      </if>
      <if test="inactiveTime != null" >
        inactive_time,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      create_account_id,
      update_account_id,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      #{funcId,jdbcType=BIGINT},
      <if test="funcName != null" >
        #{funcName,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="funcUrl != null" >
        #{funcUrl,jdbcType=VARCHAR},
      </if>
      <if test="funcType != null" >
        #{funcType,jdbcType=VARCHAR},
      </if>
      #{funcSort,jdbcType=BIGINT},
      #{parentFuncId,jdbcType=BIGINT},
      <if test="funcCssClass != null" >
        #{funcCssClass,jdbcType=VARCHAR},
      </if>
      <if test="funcPic != null" >
        #{funcPic,jdbcType=VARCHAR},
      </if>
      <if test="activeTime != null" >
        #{activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inactiveTime != null" >
        #{inactiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      #{createAccountId,jdbcType=BIGINT},
      #{updateAccountId,jdbcType=BIGINT},
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ai.opt.sys.dao.mapper.bo.GnFuncCriteria" resultType="java.lang.Integer" >
    select count(*) from gn_func
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update gn_func
    <set >
      <if test="record.funcId != null" >
        func_id = #{record.funcId,jdbcType=BIGINT},
      </if>
      <if test="record.funcName != null" >
        func_name = #{record.funcName,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.funcUrl != null" >
        func_url = #{record.funcUrl,jdbcType=VARCHAR},
      </if>
      <if test="record.funcType != null" >
        func_type = #{record.funcType,jdbcType=VARCHAR},
      </if>
      <if test="record.funcSort != null" >
        func_sort = #{record.funcSort,jdbcType=BIGINT},
      </if>
      <if test="record.parentFuncId != null" >
        parent_func_id = #{record.parentFuncId,jdbcType=BIGINT},
      </if>
      <if test="record.funcCssClass != null" >
        func_css_class = #{record.funcCssClass,jdbcType=VARCHAR},
      </if>
      <if test="record.funcPic != null" >
        func_pic = #{record.funcPic,jdbcType=VARCHAR},
      </if>
      <if test="record.activeTime != null" >
        active_time = #{record.activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.inactiveTime != null" >
        inactive_time = #{record.inactiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createAccountId != null" >
        create_account_id = #{record.createAccountId,jdbcType=BIGINT},
      </if>
      <if test="record.updateAccountId != null" >
        update_account_id = #{record.updateAccountId,jdbcType=BIGINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update gn_func
    set func_id = #{record.funcId,jdbcType=BIGINT},
      func_name = #{record.funcName,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      func_url = #{record.funcUrl,jdbcType=VARCHAR},
      func_type = #{record.funcType,jdbcType=VARCHAR},
      func_sort = #{record.funcSort,jdbcType=BIGINT},
      parent_func_id = #{record.parentFuncId,jdbcType=BIGINT},
      func_css_class = #{record.funcCssClass,jdbcType=VARCHAR},
      func_pic = #{record.funcPic,jdbcType=VARCHAR},
      active_time = #{record.activeTime,jdbcType=TIMESTAMP},
      inactive_time = #{record.inactiveTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_account_id = #{record.createAccountId,jdbcType=BIGINT},
      update_account_id = #{record.updateAccountId,jdbcType=BIGINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ai.opt.sys.dao.mapper.bo.GnFunc" >
    update gn_func
    <set >
      <if test="funcName != null" >
        func_name = #{funcName,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="funcUrl != null" >
        func_url = #{funcUrl,jdbcType=VARCHAR},
      </if>
      <if test="funcType != null" >
        func_type = #{funcType,jdbcType=VARCHAR},
      </if>
      <if test="funcSort != null" >
        func_sort = #{funcSort,jdbcType=BIGINT},
      </if>
      <if test="parentFuncId != null" >
        parent_func_id = #{parentFuncId,jdbcType=BIGINT},
      </if>
      <if test="funcCssClass != null" >
        func_css_class = #{funcCssClass,jdbcType=VARCHAR},
      </if>
      <if test="funcPic != null" >
        func_pic = #{funcPic,jdbcType=VARCHAR},
      </if>
      <if test="activeTime != null" >
        active_time = #{activeTime,jdbcType=TIMESTAMP},
      </if>
      <if test="inactiveTime != null" >
        inactive_time = #{inactiveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createAccountId != null" >
        create_account_id = #{createAccountId,jdbcType=BIGINT},
      </if>
      <if test="updateAccountId != null" >
        update_account_id = #{updateAccountId,jdbcType=BIGINT},
      </if>
    </set>
    where func_id = #{funcId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ai.opt.sys.dao.mapper.bo.GnFunc" >
    update gn_func
    set func_name = #{funcName,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      func_url = #{funcUrl,jdbcType=VARCHAR},
      func_type = #{funcType,jdbcType=VARCHAR},
      func_sort = #{funcSort,jdbcType=BIGINT},
      parent_func_id = #{parentFuncId,jdbcType=BIGINT},
      func_css_class = #{funcCssClass,jdbcType=VARCHAR},
      func_pic = #{funcPic,jdbcType=VARCHAR},
      active_time = #{activeTime,jdbcType=TIMESTAMP},
      inactive_time = #{inactiveTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_account_id = #{createAccountId,jdbcType=BIGINT},
      update_account_id = #{updateAccountId,jdbcType=BIGINT}
    where func_id = #{funcId,jdbcType=BIGINT}
  </update>
</mapper>