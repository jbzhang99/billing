allprojects { 
    apply plugin: 'java' 
    apply plugin: 'eclipse' 
    apply plugin: 'maven-publish' 
 
    ext { 
//        parentName = "ipaas-parent-service" 
        moduleVersion = "1.0.1-SNAPSHOT"
        runnerBaseVersion = "1.0.1-SNAPSHOT" 
        builtBy = "gradle 2.2" 
        publishUserName = "runnerdev" 
        publishUserPassword = "runnerdev" 
        publishURL = "http://10.1.228.199:18081/nexus/content/repositories/snapshots/" 

        mavenPublicURL = "http://10.1.228.199:18081/nexus/content/groups/public/" 
    } 
 
    compileJava.dependsOn clean 
    sourceCompatibility = 1.7 
 
    configurations.all {  resolutionStrategy.cacheChangingModulesFor 0, 'seconds'   } 
    group = "com.ai.runner.center.mmp"
} 
task zipLibs(type: Zip) {
	baseName "libs"
    from "$buildDir/libs"
}

task zipConfig(type: Zip) {
	baseName "config"
    from "$buildDir/config"
}
subprojects { 
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8' 
 
    repositories { 
        maven { url mavenPublicURL } 
        maven { url "http://10.1.228.199:18081/nexus/content/groups/public/" }
    } 
     
    sourceSets { 
        main { 
            java { 
                srcDirs = [ 
                    'src/main/java' 
                ] 
            } 
            resources { srcDirs = ['src/main/resources']} 
        } 
        
		test {
	        java {
	            srcDirs = ['src/test/java']
	        }
    	    resources { srcDirs = ['src/test/resources']}
	    }
    } 

    dependencies {  compile "com.ai.opt:opt-base:${runnerBaseVersion}"  } 
 
} 
 
project("mmp-api") { 
    project.ext { 
        appName = "mmp-api" 
        apiDir =  "src/main/java/com/ai/runner/center/mmp/api/"
    }
    
    jar { 
        baseName appName 
        version moduleVersion 
        include 'com/ai/**'
        manifest { 
            attributes 'packageName': appName, 'Built-By': builtBy, 'create-date': new Date().format('yyyy-MM-dd HH:mm:ss') 
        } 
    } 
    publish.dependsOn build 
 
} 
 
project("mmp-core") { 

    project.ext { appName = "mmp-core" } 
 
    jar { 
        baseName appName 
        version moduleVersion 
        include "com/ai/runner/center/mmp/*/**"
        manifest { 
            attributes 'packageName': appName, 'Built-By': builtBy, 'create-date': new Date().format('yyyy-MM-dd HH:mm:ss') 
        } 
    } 
} 
 
jar { 
    baseName baseName 
    version moduleVersion 
    destinationDir file("$buildDir/m-libs/") 
    manifest { 
        attributes 'packageName': baseName, 'Built-By': builtBy, 'create-date': new Date().format('yyyy-MM-dd HH:mm:ss') 
    } 
} 
 
configure(subprojects) { subproject -> 
    task sourcesJar(type: Jar, dependsOn:classes) { from sourceSets.main.output } 
    artifacts { archives sourcesJar } 
} 

task copySubProjectsJar(type: Copy) { 
    subprojects.each { subproject -> 
        from subproject.jar 
        destinationDir file("$buildDir/libs/core-libs") 
    } 
} 
task copy3rdJars(type: Copy) { 
    subprojects.each { subproject -> 
        from subproject.configurations.runtime 
        exclude "mmp-api-*.*" 
        destinationDir file("$buildDir/libs/3rd-libs") 
    } 
} 

task copySubProjectsConfig(type: Copy) { 
    subprojects.each { subproject -> 
        from subproject.fileTree(dir: 'src/main/resources') 
        destinationDir file("$buildDir/config") 
    } 
} 
 
build.dependsOn copySubProjectsJar,copy3rdJars,copySubProjectsConfig 
